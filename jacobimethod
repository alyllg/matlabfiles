function X=jacobi(M,N,P,delta, max1)

% Input  - M is an N x N nonsingular matrix
%        - N is an N x 1 matrix
%        - P is an N x 1 matrix; the initial guess
%             - delta is the tolerance for P
%             - max1 is the maximum number of iterations
% Output - X is an N x 1 matrix: the jacobi approximation to
%               the solution of MX = P
% actual code begins
A = length(N);

for k=1:max1
   for j=1:A
      X(j)=(N(j)-M(j,[1:j-1,j+1:A])*P([1:j-1,j+1:A]))/M(j,j);
   end
   err=abs(norm(X'-P));
   relerr=err/(norm(X)+eps);
   P=X';
      if (err<delta)|(relerr<delta)
     break
   end
end

X=X';
